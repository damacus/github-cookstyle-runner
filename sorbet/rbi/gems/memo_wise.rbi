# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/memo_wise/all/memo_wise.rbi
#
# memo_wise-1.13.0

module MemoWise
  def initialize(*, **, &); end
  def preset_memo_wise(method_name, *args, **kwargs); end
  def reset_memo_wise(method_name = nil, *args, **kwargs); end
  def self.prepended(target); end
end
class MemoWise::InternalAPI
  def self.args_str(method); end
  def self.call_str(method); end
  def self.create_memo_wise_state!(obj); end
  def self.find_attached_object(klass); end
  def self.key_str(method); end
  def self.method_arguments(method); end
  def self.method_visibility(target, method_name); end
  def self.original_class_from_singleton(klass); end
  def self.original_memo_wised_name(method_name); end
  def self.target_class(target); end
  def self.validate_memo_wised!(target, method_name); end
end
module MemoWise::CreateMemoWiseStateOnExtended
  def extended(base); end
end
module MemoWise::CreateMemoWiseStateOnInherited
  def inherited(subclass); end
end
module MemoWise::CreateMemoWiseStateOnIncluded
  def included(base); end
end
