# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: true
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/ostruct/all/ostruct.rbi
#
# ostruct-0.6.1

class OpenStruct
  def ==(other); end
  def [](name); end
  def []=(name, value); end
  def __id__!; end
  def __send__!(*arg0); end
  def at_exit!(&block); end
  def block_given!; end
  def class!; end
  def clone!(freeze: nil); end
  def define_singleton_method!(*arg0); end
  def delete_field!(name, &block); end
  def delete_field(name, &block); end
  def dig!(name, *names); end
  def dig(name, *names); end
  def display!(*arg0); end
  def dup!; end
  def each_pair!; end
  def each_pair; end
  def encode_with!(coder); end
  def encode_with(coder); end
  def enum_for!(*arg0); end
  def eql?(other); end
  def exit!(*); end
  def extend!(mod, *args); end
  def freeze!; end
  def freeze; end
  def gem!(dep, *reqs); end
  def hash!; end
  def hash; end
  def init_with!(coder); end
  def init_with(coder); end
  def initialize(hash = nil); end
  def initialize_clone(orig); end
  def initialize_dup(orig); end
  def inspect!; end
  def inspect; end
  def instance_eval!(*arg0); end
  def instance_exec!(*arg0); end
  def instance_variable_get!(arg0); end
  def instance_variable_set!(arg0, arg1); end
  def instance_variables!; end
  def is_method_protected!(name); end
  def itself!; end
  def marshal_dump!; end
  def marshal_dump; end
  def marshal_load(hash); end
  def method!(arg0); end
  def method_missing(mid, *args); end
  def methods!(*arg0); end
  def new_ostruct_member!(name); end
  def object_id!; end
  def presence!; end
  def pretty_inspect!; end
  def pretty_print!(q); end
  def pretty_print_cycle!(q); end
  def pretty_print_inspect!; end
  def pretty_print_instance_variables!; end
  def private_methods!(*arg0); end
  def protected_methods!(*arg0); end
  def public_method!(arg0); end
  def public_methods!(*arg0); end
  def public_send!(*arg0); end
  def raise!(*arg0); end
  def remove_instance_variable!(arg0); end
  def require_dependency!(filename); end
  def send!(*arg0); end
  def set_ostruct_member_value!(name, value); end
  def singleton_class!; end
  def singleton_method!(arg0); end
  def singleton_methods!(*arg0); end
  def table!; end
  def table; end
  def tap!; end
  def then!; end
  def to_enum!(*arg0); end
  def to_h!(&block); end
  def to_h(&block); end
  def to_json!(*arg0); end
  def to_param!; end
  def to_query!(key); end
  def to_s!; end
  def to_s; end
  def to_yaml!(options = nil); end
  def try!(*args, **, &block); end
  def update_to_values!(hash); end
  def with!(**attributes); end
  def yield_self!; end
end
